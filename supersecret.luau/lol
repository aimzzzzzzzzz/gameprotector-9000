--[[
    Rewritten SaveInstance Bypass Script
    Description: This script fetches and loads external decompiler and utility modules securely,
    caches them, and provides helper utilities for instance manipulation.
--]]

-- Cache mechanism for loaded scripts
local cached_loads = {}
local function safeLoad(source, name)
    if not cached_loads[name] then
        local func, err = loadstring(source, name)
        if not func then
            error("Failed to load script: " .. name .. "\nError: " .. tostring(err))
        end
        cached_loads[name] = func
    end
    return cached_loads[name]
end

-- Secure HttpGet wrapper
local function safeHttpGet(url)
    local success, result = pcall(function()
        return game:HttpGet(url, true)
    end)
    if not success then
        error("HttpGet failed: " .. tostring(result))
    end
    return result
end

-- Helper function to convert an array to a dictionary
local function ArrayToDict(t, hybridMode, valueOverride, typeStrict)
    local tmp = {}

    if hybridMode then
        for key, val in pairs(t) do
            if type(key) == "number" then
                tmp[val] = valueOverride or true
            elseif type(val) == "table" then
                tmp[key] = ArrayToDict(val, hybridMode)
            else
                tmp[key] = val
            end
        end
    else
        for _, key in pairs(t) do
            if not typeStrict or (typeStrict and type(key) == typeStrict) then
                tmp[key] = true
            end
        end
    end

    return tmp
end

-- Load KonstantDecompiler
local konstantDecompilerSource = safeHttpGet("https://raw.githubusercontent.com/verysigmapro/UniversalSynSaveInstance-With-Save-Terrain/refs/heads/main/konstantdecompiler.lua")
local konstantDecompiler = safeLoad(konstantDecompilerSource, "KonstantDecompiler")()

-- Load UniversalMethodFinder
local methodFinderSource = safeHttpGet("https://raw.githubusercontent.com/luau/SomeHub/main/UniversalMethodFinder.luau")
local methodFinder, methodContainer = safeLoad(methodFinderSource, "UniversalMethodFinder")()

-- Example usage of method finder
methodFinder({
    base64encode = 'local args={...}local str=args[1] return string.find(str,"encode",1,true) and string.find(str,"base64",1,true)',
    decodefn = 'local args={...}local str=args[1] return string.find(str,"decode",1,true) and not string.find(str,"internal",1,true)',
})

-- Your additional logic here using konstantDecompiler or methodContainer
-- Example: konstantDecompiler:DecompileInstance(game.Workspace)

-- END OF SCRIPT
